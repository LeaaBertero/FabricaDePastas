@page "/api/Categoria_Producto/Editar/{Categoria_ProductoId:int}"
@inject IHTTPServicio http
@inject NavigationManager navigationManager

<h1 class="text-center mb-4 text-success fw-bold">📂 Modificar categoría de producto</h1>

<EditForm Model="EditarCategoriaproducto" OnValidSubmit="Grabar" class="container">
    <DataAnnotationsValidator />

    <div class="row justify-content-center g-3">
        <div class="col-md-6">
            <label for="nombreCategoria" class="form-label">Nombre de categoría</label>
            <input type="text" id="nombreCategoria" @bind="EditarCategoriaproducto.Nombre_Categoria"
                   class="form-control" placeholder="Ej: Bebidas, Snacks, Limpieza..." />
            <ValidationMessage For="@(() => EditarCategoriaproducto.Nombre_Categoria)" />
        </div>

        <div class="col-md-6">
            <label for="imagenCategoria" class="form-label">Imagen</label>
            <!-- ✅ quitamos la subida de archivo en editar -->
            <input type="text" id="imagenCategoria" @bind="EditarCategoriaproducto.Imagen_Url"
                   class="form-control" placeholder="URL de la imagen" />
            @if (!string.IsNullOrEmpty(EditarCategoriaproducto.Imagen_Url))
            {
                <img src="@EditarCategoriaproducto.Imagen_Url" class="img-thumbnail mt-2" style="max-height:100px;" />
            }
        </div>

        <div class="col-12 text-center mt-4">
            <button class="btn btn-success me-2" type="submit">✅ Actualizar categoría</button>
            <button class="btn btn-outline-secondary" type="button" @onclick="Cancelar">Cancelar</button>
        </div>
    </div>
</EditForm>

@code {
    private Categoria_Producto EditarCategoriaproducto = new Categoria_Producto();

    [Parameter]
    public int Categoria_ProductoId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.Get<Categoria_Producto>($"api/Categoria_Producto/{Categoria_ProductoId}");
        if (!respuesta.Error)
        {
            EditarCategoriaproducto = respuesta.Respuesta;
        }
        else
        {
            navigationManager.NavigateTo("/api/Categoria_Producto/Lista");
        }
    }

    private async Task Grabar()
    {
        EditarCategoriaproducto.Id = Categoria_ProductoId;

        var httpRespuesta = await http.Put<Categoria_Producto>(
            $"api/Categoria_Producto/{Categoria_ProductoId}",
            EditarCategoriaproducto
        );

        if (httpRespuesta.Error)
        {
            var body = await httpRespuesta.HttpResponseMessage.Content.ReadAsStringAsync();
            Console.WriteLine($"Error en PUT: {body}");
        }
        else
        {
            navigationManager.NavigateTo("/api/Categoria_Producto/Lista");
        }
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Categoria_Producto/Lista");
    }
}
