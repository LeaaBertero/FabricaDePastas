@page "/api/Categoria_Producto/Lista"
@using FabricaPastas.Client.Shared
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;

<h1 class="text-center mb-4 text-success fw-bold">📂 Categorías de productos</h1>

<div class="container mb-4">
    <div class="d-flex justify-content-between align-items-center">
        <p class="mb-0 fw-semibold">Nueva categoría disponible:</p>
        <a class="btn btn-primary" href="/api/Categoria_Producto/Crear">➕ Crear categoría</a>
    </div>
</div>

<div class="container">
    @if (Mensaje == null)
    {
        @if (Lista_categoria == null)
        {
            <div class="alert alert-secondary text-center">🔄 Buscando categorías...</div>
        }
        else if (Lista_categoria.Count == 0)
        {
            <div class="alert alert-warning text-center">⚠️ No existen categorías cargadas</div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-bordered table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>🏷️ Nombre de categoría</th>
                            <th>🖼️ Imagen (URL)</th>
                            <th class="text-center">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Lista_categoria)
                        {
                            <tr>
                                <td>@item.Nombre_Categoria</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.Imagen_Url))
                                    {
                                        <a href="@item.Imagen_Url" target="_blank">@item.Imagen_Url</a>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Sin imagen</span>
                                    }
                                </td>
                                <td class="text-center">
                                    <a class="btn btn-warning btn-sm me-2" href="/api/Categoria_Producto/Editar/@item.Id">✏️ Modificar</a>
                                    <button class="btn btn-danger btn-sm" @onclick="() => PrepararEliminar(item)">🗑️ Borrar</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    }
    else
    {
        <div class="alert alert-danger text-center">❌ Error: @Mensaje</div>
    }
</div>

<Confirmacion @ref="confirmacion"
              Titulo="⚠️ Alerta"
              textCancelar="Cancelar"
              onCancel="@Cancelar"
              onConfirm="@Borrar">
    <h5 class="text-danger text-center">Está por eliminar una categoría. ¿Desea continuar?</h5>
</Confirmacion>

@code {
    Confirmacion confirmacion;

    private List<Categoria_Producto> Lista_categoria = new();  // inicializada para evitar null ref
    private Categoria_Producto? Categoriaborrar = null;

    string Mensaje;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        var resp = await http.Get<List<Categoria_Producto>>("api/Categoria_Producto");

        if (!resp.Error)
        {
            Lista_categoria = resp.Respuesta;
        }
        else
        {
            Mensaje = await resp.ObtenerError();
        }
    }

    // Al hacer click en Borrar guardamos item y mostramos modal
    private void PrepararEliminar(Categoria_Producto categoria)
    {
        Categoriaborrar = categoria;
        confirmacion.Ver();
    }

    // Cancelar: cerrar modal y limpiar selección
    private void Cancelar()
    {
        confirmacion.Ocultar();
        Categoriaborrar = null;
    }

    // Método invocado por onConfirm (sin parámetros)
    private async Task Borrar()
    {
        if (Categoriaborrar == null)
        {
            confirmacion.Ocultar();
            return;
        }

        // CORRECCIÓN: incluir la barra antes del id
        var respuesta = await http.Delete($"api/Categoria_Producto/{Categoriaborrar.Id}");

        if (respuesta.Error)
        {
            Mensaje = "No se pudo borrar la categoría";
        }
        else
        {
            await Leer();
        }

        Categoriaborrar = null;
        confirmacion.Ocultar();
    }
}





