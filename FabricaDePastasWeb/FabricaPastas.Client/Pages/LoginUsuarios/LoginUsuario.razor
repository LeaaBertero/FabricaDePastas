@* @page "/api/Usuario/Login"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;


<!DOCTYPE html>
    <html>

    <head>
        <title>Registro de usuarios</title>
    </head>

    <body>

        <header>

            <h1 class=" text-center">Ingresá usuario y contraseña para acceder al sistema</h1>

            <EditForm Model="usuario" OnValidSubmit="Grabar">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <label for="e-mail">E-mail</label>
                    <input type="email" @bind="usuario.NombreUsuario" class="form-control" />
                    <ValidationMessage For="@(() => usuario.NombreUsuario)" />
                </div>

                <div class="form-group">
                    <label for="contraseña">Contraseña</label>
                    <input type="password" @bind="usuario.Contraseña" class="form-control" />
                    <ValidationMessage For="@(() => usuario.Contraseña)" />
                </div>

                
                <div>
                    <button class="btn btn-primary" type="submit">Ingresar</button>
                    <button class="btn btn-secondary" onclick="Cancelar">Cancelar</button>
                </div>

            </EditForm>

        </header>

        <main>

        </main>

        <footer>
            <p>&copy; 2025 La Nonna Personal</p>
        </footer>

    </body>

</html>

@code {
    private Usuario usuario = new Usuario();

    private async Task Grabar()
    {
        var httpRespuesta = await http.Post<Usuario>("/", usuario);

        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/");
    }


}
 *@



@page "/LoginUsuarios"
@inject IHTTPServicio http
@inject NavigationManager navigationManager

@* <EditForm Model="usuarioLogin" OnValidSubmit="IniciarSesion">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Usuario</label>
        <InputText @bind-Value="usuarioLogin.NombreUsuario" class="form-control" />
    </div>

    <div class="form-group">
        <label>Contraseña</label>
        <InputText @bind-Value="usuarioLogin.Contraseña" type="password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Ingresar</button>
</EditForm> *@

<h1 class="text-center mb-4">🔐 Iniciar sesión</h1>

<EditForm Model="usuarioLogin" OnValidSubmit="IniciarSesion" class="container">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="mb-3">
                <label for="NombreUsuario" class="form-label">Usuario</label>
                <InputText id="NombreUsuario" @bind-Value="usuarioLogin.NombreUsuario" class="form-control" placeholder="Ej: lean.dev" />
                <ValidationMessage For="@(() => usuarioLogin.NombreUsuario)" />
            </div>

            <div class="mb-3">
                <label for="Contraseña" class="form-label">Contraseña</label>
                <InputText id="Contraseña" @bind-Value="usuarioLogin.Contraseña" type="password" class="form-control" placeholder="••••••••" />
                <ValidationMessage For="@(() => usuarioLogin.Contraseña)" />
            </div>

            <div class="text-center mt-4">
                <button type="submit" class="btn btn-success me-2">✅ Ingresar</button>
                @* <button type="button" class="btn btn-outline-secondary" @onclick="Cancelar">Cancelar</button> *@
            </div>
        </div>
    </div>
</EditForm>

@code {
   
    
    private CrearLoginDTO usuarioLogin = new CrearLoginDTO();

    private async Task IniciarSesion()
    {
        // var httpRespuesta = await http.Post<Usuario>("/api/Usuario/Login", usuarioLogin );
        var httpRespuesta = await http.Post<CrearLoginDTO>("/api/Usuario/Login", usuarioLogin);
        

        if (!httpRespuesta.Error && httpRespuesta.HttpResponseMessage.IsSuccessStatusCode)
        {
            // Si querés guardar el token, lo hacés acá
            // Por ahora redirigimos al dashboard
            navigationManager.NavigateTo("/api/Tipo_Cliente");
        }
        else
        {
            // Acá podrías mostrar un mensaje de error
            Console.WriteLine("Login fallido");
        }
    }
}
