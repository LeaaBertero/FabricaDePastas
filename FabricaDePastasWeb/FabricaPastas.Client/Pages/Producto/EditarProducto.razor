@page "/api/Producto/Editar/{ProductoId:int}"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;

<!DOCTYPE html>
<html>
<head>
    <title>Editar producto</title>
</head>

<body>

    <header>
        <h1>Editar producto</h1>
    </header>

    <main>

        <EditForm Model="Editar_producto" OnValidSubmit="Grabar">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="nombre">Nombre</label>
                <input type="text" @bind="Editar_producto.Nombre" class="form-control" />
                <ValidationMessage For="@(() => Editar_producto.Nombre)" />
            </div>
           
            <div class="form-group">
                <label for="descripcion">Descripcion</label>
                <input type="text" @bind="Editar_producto.Descripcion" class="form-control" />
                <ValidationMessage For="@(() => Editar_producto.Descripcion)" />
            </div>

            <div class="form-group">
                <label for="precio_base">Precio base</label>
                <input type="number" @bind="Editar_producto.PrecioBase" class="form-control" />
                <ValidationMessage For="@(() => Editar_producto.PrecioBase)" />
            </div>
            
            <div class="form-group">
                <label for="imagen_url">Imagen del producto</label>
                <input type="url" @bind="Editar_producto.Imagen_Url" class="form-control" />
                <ValidationMessage For="@(() => Editar_producto.Imagen_Url)" />
            </div>
            
            <div class="form-group">
                <label for="stock">Stock de productos disponibles</label>
                <input type="number" name="stock" min="0" step="1" required @bind="Editar_producto.Stock" class="form-control" />
                <ValidationMessage For="@(() => Editar_producto.Stock)" />
            </div>

           


            <div>
                <button class="btn btn-success" type="submit">Actualizar</button>
                <button class="btn btn-secondary" onclick="Cancelar">Cancelar</button>
            </div>


        </EditForm>

    </main>

    <footer>
        <p class="text-center">© 2023 La Nonna Personal</p>
    </footer>

</body>
</html>


@code {

    private Producto Editar_producto = new Producto();

    [Parameter]
    public int ProductoId { get; set; }



    string pepe = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.Get<Producto>($"api/Producto/{ProductoId}");

        if (!respuesta.Error)
        {
            Editar_producto = respuesta.Respuesta;
        }
        else
        {
            navigationManager.NavigateTo("/api/Producto");
        }
    }



    private async Task Grabar()
    {
        //tDocumento.Personas = new List<Persona>();

        var httpRespuesta = await http.Put<Producto>($"api/Producto/{ProductoId}", Editar_producto);
        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/api/Producto");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Producto/Lista");
    }

}
