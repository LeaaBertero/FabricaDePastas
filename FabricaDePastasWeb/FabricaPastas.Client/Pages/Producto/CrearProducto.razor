@page "/api/Producto/Crear"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;


@* <h1 class=" text-center">Carga de productos (Stock)</h1>

<EditForm Model="producto" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="nombre">Nombre</label>
        <input type="text" @bind="producto.Nombre" class="form-control" />
        <ValidationMessage For="@(() => producto.Nombre)" />
    </div>
                    
    <div class="form-group">
        <label for="descripcion">Descripción</label>
        <input type="text" @bind="producto.Descripcion" class="form-control" />
        <ValidationMessage For="@(() => producto.Descripcion)" />
    </div>

    <div class="form-group">
        <label for="preciobase">Precio base</label>
        <input type="number" @bind="producto.PrecioBase" class="form-control" />
        <ValidationMessage For="@(() => producto.PrecioBase)" />
    </div>
                    
    <div class="form-group">
        <label for="imagenproducto">Imagen del producto</label>
        <input type="file" name="imagen" accept="image/*" @bind="producto.Imagen_Url" />
        <ValidationMessage For="@(() => producto.Imagen_Url)" />
    </div>
                   
    <div class="form-group">
        <label for="stock">Stock</label>
        <input type="tel" name="stock" min="0" step="1" required @bind="producto.Stock" />
        <ValidationMessage For="@(() => producto.Stock)" />
    </div>

                    


    <div>
        <button class="btn btn-primary" type="submit">Registrar</button>
        <button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </div>


</EditForm> *@

<h1 class="text-center mb-4">Carga de productos (Stock)</h1>

<EditForm Model="producto" OnValidSubmit="Grabar" class="container">
    <DataAnnotationsValidator />

    <div class="row g-3">
        <div class="col-md-6">
            <label for="nombre" class="form-label">Nombre del producto</label>
            <input type="text" id="nombre" @bind="producto.Nombre" class="form-control" placeholder="Ej: Yerba Mate 500g" />
            <ValidationMessage For="@(() => producto.Nombre)" />
        </div>

        <div class="col-md-6">
            <label for="descripcion" class="form-label">Descripción</label>
            <input type="text" id="descripcion" @bind="producto.Descripcion" class="form-control" placeholder="Ej: Orgánica, sin TACC" />
            <ValidationMessage For="@(() => producto.Descripcion)" />
        </div>

        <div class="col-md-4">
            <label for="preciobase" class="form-label">Precio base</label>
            <input type="number" id="preciobase" @bind="producto.PrecioBase" class="form-control" step="0.01" min="0" placeholder="Ej: 999.99" />
            <ValidationMessage For="@(() => producto.PrecioBase)" />
        </div>

        <div class="col-md-4">
            <label for="stock" class="form-label">Stock disponible</label>
            <input type="number" id="stock" @bind="producto.Stock" class="form-control" step="1" min="0" placeholder="Ej: 50" />
            <ValidationMessage For="@(() => producto.Stock)" />
        </div>

        <div class="col-md-4">
            <label for="imagenproducto" class="form-label">Imagen del producto</label>
            <input type="file" id="imagenproducto" name="imagen" accept="image/*" @bind="producto.Imagen_Url" class="form-control" />
            <ValidationMessage For="@(() => producto.Imagen_Url)" />
        </div>

        <div class="col-12 text-center mt-4">
            <button class="btn btn-success me-2" type="submit">📦 Registrar producto</button>
            <button class="btn btn-outline-secondary" type="button" @onclick="Cancelar">Cancelar</button>
        </div>
    </div>
</EditForm>



           

@code {
    private Producto producto = new Producto();

    private async Task Grabar()
    {
        var httpRespuesta = await http.Post<Producto>("api/Producto", producto);

        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/api/Producto/Lista");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Producto/Lista");
    }
}
