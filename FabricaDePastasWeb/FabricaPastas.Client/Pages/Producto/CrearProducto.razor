@page "/api/Producto/Crear"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;


<h1 class="text-center mb-4 text-success fw-bold">
    <i class="bi bi-box-fill me-2"></i>Carga de productos (Stock)
</h1>

<EditForm Model="producto" OnValidSubmit="Grabar" class="container">
    <DataAnnotationsValidator />

    <div class="card shadow-sm border-start border-4 border-success mb-5">
        <div class="card-body">
            <div class="row g-4">
                <!-- Nombre del producto -->
                <div class="col-md-6">
                    <label for="nombre" class="form-label fw-semibold">
                        <i class="bi bi-tag-fill me-1"></i>Nombre del producto
                    </label>
                    <input type="text" id="nombre" @bind="producto.Nombre" class="form-control" placeholder="Ej: Yerba Mate 500g" />
                    <ValidationMessage For="@(() => producto.Nombre)" />
                </div>

                <!-- Descripción -->
                <div class="col-md-6">
                    <label for="descripcion" class="form-label fw-semibold">
                        <i class="bi bi-card-text me-1"></i>Descripción
                    </label>
                    <input type="text" id="descripcion" @bind="producto.Descripcion" class="form-control" placeholder="Ej: Orgánica, sin TACC" />
                    <ValidationMessage For="@(() => producto.Descripcion)" />
                </div>

                <!-- Precio base -->
                <div class="col-md-4">
                    <label for="preciobase" class="form-label fw-semibold">
                        <i class="bi bi-currency-dollar me-1"></i>Precio base
                    </label>
                    <input type="number" id="preciobase" @bind="producto.PrecioBase" class="form-control" step="0.01" min="0" placeholder="Ej: 999.99" />
                    <ValidationMessage For="@(() => producto.PrecioBase)" />
                </div>

                <!-- Stock disponible -->
                <div class="col-md-4">
                    <label for="stock" class="form-label fw-semibold">
                        <i class="bi bi-stack me-1"></i>Stock disponible
                    </label>
                    <input type="number" id="stock" @bind="producto.Stock" class="form-control" step="1" min="0" placeholder="Ej: 50" />
                    <ValidationMessage For="@(() => producto.Stock)" />
                </div>

                <!-- Imagen del producto -->
                <div class="col-md-4">
                    <label for="imagenproducto" class="form-label fw-semibold">
                        <i class="bi bi-image me-1"></i>Imagen del producto
                    </label>
                    <input type="file" id="imagenproducto" name="imagen" accept="image/*" @bind="producto.Imagen_Url" class="form-control" />
                    <ValidationMessage For="@(() => producto.Imagen_Url)" />
                </div>

                <!-- Botones -->
                <div class="col-12 text-center mt-4">
                    <button class="btn btn-success me-2" type="submit">
                        <i class="bi bi-box-arrow-in-down me-1"></i>Registrar producto
                    </button>
                    <button class="btn btn-outline-secondary me-2" type="button" @onclick="Cancelar">
                        <i class="bi bi-x-circle me-1"></i>Cancelar
                    </button>
                    <button class="btn btn-outline-secondary" type="button" @onclick="ListaProductos">
                        <i class="bi bi-list-ul me-1"></i>Ver lista
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>



           

@code {
    private Producto producto = new Producto();

    private async Task Grabar()
    {
        var httpRespuesta = await http.Post<Producto>("api/Producto", producto);

        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/api/Producto/Lista");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Rol");
    }

    private void ListaProductos()
    {
        navigationManager.NavigateTo("/api/Producto/Lista");
    }


   



}
