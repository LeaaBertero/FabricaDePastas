@page "/api/Promocion_Producto/Crear"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;


@* <h1 class="text-center">Promocion de los productos</h1>

<EditForm Model="promocion_producto" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="descuento_pocercentaje">Nombre de producto</label>
        <input placeholder="Nombre del producto" type="text" step="0.01" min="0"
                @bind="promocion_producto.Nombre_Producto" class="form-control" />
        <ValidationMessage For="@(() => promocion_producto.Nombre_Producto)" />
    </div>

    <div class="form-group">
        <label for="descuento_pocercentaje">Descuento porcentaje</label>
        <input placeholder="Descuento en porcentaje" type="number" step="0.01" min="0"
                @bind="promocion_producto.Descuento_Porcentaje" class="form-control" />
        <ValidationMessage For="@(() => promocion_producto.Descuento_Porcentaje)" />
    </div>

    <div class="form-group">
        <label for="apellido">Precio promocional</label>
        <input placeholder="Precio promocional" type="number" step="0.01" min="0"
                @bind="promocion_producto.Precio_Promocional" class="form-control" />
        <ValidationMessage For="@(() => promocion_producto.Precio_Promocional)" />
    </div>

            

    <div>
        <button class="btn btn-primary" type="submit">Crear promo !</button>
        <button class="btn btn-secondary" onclick="Cancelar">Cancelar</button>
    </div>

</EditForm> *@

<h1 class="text-center mb-4">Promoción de los productos</h1>

<EditForm Model="promocion_producto" OnValidSubmit="Grabar" class="container">
    <DataAnnotationsValidator />

    <div class="row g-3">
        <div class="col-md-6">
            <label for="nombreProducto" class="form-label">Nombre del producto</label>
            <input type="text" id="nombreProducto" placeholder="Nombre del producto"
                   @bind="promocion_producto.Nombre_Producto" class="form-control" />
            <ValidationMessage For="@(() => promocion_producto.Nombre_Producto)" />
        </div>

        <div class="col-md-3">
            <label for="descuentoPorcentaje" class="form-label">Descuento (%)</label>
            <input type="number" id="descuentoPorcentaje" placeholder="Ej: 15.00" step="0.01" min="0"
                   @bind="promocion_producto.Descuento_Porcentaje" class="form-control" />
            <ValidationMessage For="@(() => promocion_producto.Descuento_Porcentaje)" />
        </div>

        <div class="col-md-3">
            <label for="precioPromocional" class="form-label">Precio promocional</label>
            <input type="number" id="precioPromocional" placeholder="Ej: 999.99" step="0.01" min="0"
                   @bind="promocion_producto.Precio_Promocional" class="form-control" />
            <ValidationMessage For="@(() => promocion_producto.Precio_Promocional)" />
        </div>

        <div class="col-12 text-center mt-4">
            <button class="btn btn-success me-2" type="submit">🎯 Crear promoción</button>
            <button class="btn btn-outline-secondary" type="button" @onclick="Cancelar">Cancelar</button>
        </div>
    </div>
</EditForm>

    

@code {
    private Promocion_Producto promocion_producto = new Promocion_Producto();

    private async Task Grabar()
    {
        var httpRespuesta = await http.Post<Promocion_Producto>("api/Promocion_Producto", promocion_producto);

        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Promocion_Producto/Lista");
    }


}
