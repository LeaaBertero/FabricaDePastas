@page "/api/Promocion_Producto/Crear"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;


<h1 class="text-center mb-4 text-success fw-bold">
    <i class="bi bi-megaphone-fill me-2"></i>Promoción de los productos
</h1>

<EditForm Model="promocion_producto" OnValidSubmit="Grabar" class="container">
    <DataAnnotationsValidator />

    <div class="card shadow-sm border-start border-4 border-success mb-5">
        <div class="card-body">
            <div class="row g-4">
                <!-- Nombre del producto -->
                <div class="col-md-6">
                    <label for="nombreProducto" class="form-label fw-semibold">
                        <i class="bi bi-box-seam me-1"></i>Nombre del producto
                    </label>
                    <input type="text" id="nombreProducto" placeholder="Ej: Ravioles de ricota"
                           @bind="promocion_producto.Nombre_Producto" class="form-control" />
                    <ValidationMessage For="@(() => promocion_producto.Nombre_Producto)" />
                </div>

                <!-- Fecha desde -->
                <div class="col-md-6">
                    <label for="fechaDesde" class="form-label fw-semibold">
                        <i class="bi bi-calendar-event me-1"></i>Fecha desde
                    </label>
                    <input type="date" id="fechaDesde" @bind="promocion_producto.FechaDesde" class="form-control" />
                    <ValidationMessage For="@(() => promocion_producto.FechaDesde)" />
                </div>

                <!-- Fecha hasta -->
                <div class="col-md-6">
                    <label for="fechaHasta" class="form-label fw-semibold">
                        <i class="bi bi-calendar-check me-1"></i>Fecha hasta
                    </label>
                    <input type="date" id="fechaHasta" @bind="promocion_producto.FechaHasta" class="form-control" />
                    <ValidationMessage For="@(() => promocion_producto.FechaHasta)" />
                </div>

                <!-- Descuento (%) -->
                <div class="col-md-3">
                    <label for="descuentoPorcentaje" class="form-label fw-semibold">
                        <i class="bi bi-percent me-1"></i>Descuento (%)
                    </label>
                    <input type="number" id="descuentoPorcentaje" placeholder="Ej: 15.00" step="0.01" min="0"
                           @bind="promocion_producto.Descuento_Porcentaje" class="form-control" />
                    <ValidationMessage For="@(() => promocion_producto.Descuento_Porcentaje)" />
                </div>

                <!-- Precio promocional -->
                <div class="col-md-3">
                    <label for="precioPromocional" class="form-label fw-semibold">
                        <i class="bi bi-currency-dollar me-1"></i>Precio promocional
                    </label>
                    <input type="number" id="precioPromocional" placeholder="Ej: 999.99" step="0.01" min="0"
                           @bind="promocion_producto.Precio_Promocional" class="form-control" />
                    <ValidationMessage For="@(() => promocion_producto.Precio_Promocional)" />
                </div>

                <!-- Botones -->
                <div class="col-12 text-center mt-4">
                    <button class="btn btn-success me-2" type="submit">
                        <i class="bi bi-check-circle-fill me-1"></i>Crear promoción
                    </button>
                    <button class="btn btn-outline-secondary" type="button" @onclick="Cancelar">
                        <i class="bi bi-x-circle me-1"></i>Cancelar
                    </button>
                    <button class="btn btn-outline-secondary" type="button" @onclick="VerListaPromocionProducto">
                        <i class="bi bi-x-circle me-1"></i>Ver lista activa
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>
 

@code {
    private Promocion_Producto promocion_producto = new Promocion_Producto();

    private async Task Grabar()
    {
        var httpRespuesta = await http.Post<Promocion_Producto>("api/Promocion_Producto", promocion_producto);

        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }

        navigationManager.NavigateTo("/api/Promocion_Producto/Lista");

    }

    private void VerListaPromocionProducto()
    {
        navigationManager.NavigateTo("/api/Promocion_Producto/Lista");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Rol");
    }


}
