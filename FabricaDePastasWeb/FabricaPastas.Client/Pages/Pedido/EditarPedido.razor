@page "/api/Pedido/Editar/{PedidoId:int}"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;

<h1 class="mb-4">✏️ Editar pedido</h1>

<EditForm Model="Editar_pedido" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />

    <div class="form-group mb-3">
        <label for="FechaPedido">📅 Fecha pedido</label>
        <input type="date" @bind="Editar_pedido.Fecha_Pedido" class="form-control" />
        <ValidationMessage For="@(() => Editar_pedido.Fecha_Pedido)" />
    </div>

    <div class="form-group mb-3">
        <label for="FechaEntrega">🚚 Fecha entrega</label>
        <input type="date" @bind="Editar_pedido.Fecha_Entrega" class="form-control" />
        <ValidationMessage For="@(() => Editar_pedido.Fecha_Entrega)" />
    </div>

    <div class="form-group mb-3">
        <label for="Obs">📝 Observaciones Catering</label>
        <input type="text" @bind="Editar_pedido.Observaciones_Catering" class="form-control" />
        <ValidationMessage For="@(() => Editar_pedido.Observaciones_Catering)" />
    </div>

    <div class="form-group mb-3">
        <label for="Total">💰 Total</label>
        <input type="number" @bind="Editar_pedido.Total" class="form-control" />
        <ValidationMessage For="@(() => Editar_pedido.Total)" />
    </div>

    <div class="mt-3">
        <button class="btn btn-success" type="submit">💾 Guardar</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </div>
</EditForm>

@code {
    private Pedido Editar_pedido = new Pedido();

    [Parameter]
    public int PedidoId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.Get<Pedido>($"api/Pedido/{PedidoId}");

        if (!respuesta.Error)
        {
            Editar_pedido = respuesta.Respuesta;
        }
        else
        {
            navigationManager.NavigateTo("/api/Pedido/Lista");
        }
    }

    private async Task Grabar()
    {
        var httpRespuesta = await http.Put<Pedido>($"api/Pedido/{PedidoId}", Editar_pedido);
        if (!httpRespuesta.Error)
        {
            navigationManager.NavigateTo("/api/Pedido/Lista");
        }
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Pedido/Lista");
    }
}
