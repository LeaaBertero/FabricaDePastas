@page "/api/Tipo_Cliente/Lista"
@inject IHTTPServicio http;
@inject HttpClient Http;
@inject NavigationManager navigationManager;



<div class="container my-5">
  <div class="text-center mb-4">
    <h1 class="display-6 fw-bold text-success">
      🧾 Gestión de tipo de cliente
    </h1>
    <p class="text-muted">Seleccioná un tipo de cliente y realizá acciones administrativas</p>
  </div>

  <div class="row justify-content-center">
    <div class="col-md-6">
      <div class="card shadow-sm border-start border-4 border-success">
        <div class="card-body">
          <label for="TipoClienteSeleccionado" class="form-label fw-semibold">
            Opciones disponibles
          </label>
          <select id="TipoClienteSeleccionado" @bind="TipoClienteSeleccionado" class="form-select">
            <option disabled selected value="">-- Seleccione un tipo de cliente --</option>
            @if (ListaTipoCliente != null)
            {
              foreach (var TipoCliente in ListaTipoCliente)
              {
                <option value="@TipoCliente.Tipo_Cliente_Id">@TipoCliente.Descripcion</option>
              }
            }
          </select>

          @if (!string.IsNullOrEmpty(TipoClienteSeleccionado))
          {
            <div class="alert alert-info mt-3 text-center">
              Cliente seleccionado: <strong>@TipoClienteSeleccionado</strong>
            </div>
          }

          <div class="text-center mt-4">
            <button class="btn btn-success me-2" @onclick="IngresarConTipoCliente">
              ✅ Ingresar
            </button>
            <button class="btn btn-outline-secondary" type="button" @onclick="IngresarConTipoCliente">
              ❌ Cancelar
            </button>
            <a class="btn btn-outline-info" href="/api/Tipo_Cliente/Lista">
              📋 Ver lista
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>

  @if (Mensaje == null)
  {
    if (ListaTipoCliente == null)
    {
      <p class="text-center text-muted mt-4">Buscando tipos de cliente...</p>
    }
    else if (ListaTipoCliente.Count == 0)
    {
      <p class="text-center text-warning mt-4">No existen tipos de cliente registrados</p>
    }
  }
  else
  {
    <p class="text-center text-danger mt-4">Error: @Mensaje</p>
  }
</div>


@code {

    //selecciona el rol de usuario
    private string TipoClienteSeleccionado;

    private List<Tipo_Cliente> ListaTipoCliente;

    // private List<Tipo_Cliente> ListaTipoClientes;

    string Mensaje;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ListaTipoCliente = await Http.GetFromJsonAsync<List<Tipo_Cliente>>("api/Tipo_Cliente");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error obteniendo tipos de cliente: {ex.Message}");
        }
    }

    private void IngresarConTipoCliente()
    {
        if (!string.IsNullOrEmpty(TipoClienteSeleccionado))
        {
            navigationManager.NavigateTo($"/api/Promocion_Producto/ListaSB");
        }
    }
}




