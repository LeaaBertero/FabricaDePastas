@page "/api/Tipo_Cliente"
@inject IHTTPServicio http;
@inject HttpClient Http;
@inject NavigationManager navigationManager;


@* <h1>Seleccione el tipo de cliente</h1>

<select @bind="TipoClienteSeleccionado" class="form-select">
    <option disabled selected value="">-- Seleccione un tipo de cliente --</option>
    @if (ListaTipoCliente != null)
    {
        foreach (var TipoCliente in ListaTipoCliente)
        {
            <option value="@TipoCliente.Tipo_Cliente_Id">@TipoCliente.Descripcion</option>
        }
    }
</select>

@if (!string.IsNullOrEmpty(TipoClienteSeleccionado))
{
    <p>Cliente seleccionado: <strong>@TipoClienteSeleccionado</strong></p>
}

<button class="btn btn-primary" @onclick="IngresarConTipoCliente">Ingresar</button> *@

<h1 class="text-center mb-4">🧾 Seleccione el tipo de cliente</h1>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <label for="TipoClienteSeleccionado" class="form-label">Opciones disponibles</label>
            <select id="TipoClienteSeleccionado" @bind="TipoClienteSeleccionado" class="form-select">
                <option disabled selected value="">-- Seleccione un tipo de cliente --</option>
                @if (ListaTipoCliente != null)
                {
                    foreach (var TipoCliente in ListaTipoCliente)
                    {
                        <option value="@TipoCliente.Tipo_Cliente_Id">@TipoCliente.Descripcion</option>
                    }
                }
            </select>

            @if (!string.IsNullOrEmpty(TipoClienteSeleccionado))
            {
                <div class="alert alert-info mt-3 text-center">
                    Cliente seleccionado: <strong>@TipoClienteSeleccionado</strong>
                </div>
            }

            <div class="text-center mt-4">
                <button class="btn btn-success me-2" @onclick="IngresarConTipoCliente">✅ Ingresar</button>
                @* <button class="btn btn-outline-secondary" type="button" @onclick="Cancelar">Cancelar</button> *@
            </div>
        </div>
    </div>
</div>

@if (Mensaje == null)
{
    if (ListaTipoCliente == null)
    {
        <p>Buscando...</p>
    }
    else if (ListaTipoCliente.Count == 0)
    {
        <p>No existen tipos de cliente</p>
    }
}
else
{
    <p>Error: @Mensaje</p>
}




@code {

    //selecciona el rol de usuario
    private string TipoClienteSeleccionado;

    private List<Tipo_Cliente> ListaTipoCliente;

    // private List<Tipo_Cliente> ListaTipoClientes;

    string Mensaje;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ListaTipoCliente = await Http.GetFromJsonAsync<List<Tipo_Cliente>>("api/Tipo_Cliente");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error obteniendo tipos de cliente: {ex.Message}");
        }
    }

    private void IngresarConTipoCliente()
    {
        if (!string.IsNullOrEmpty(TipoClienteSeleccionado))
        {
            navigationManager.NavigateTo($"/api/Categoria_Producto/Lista");
        }
    }
}




