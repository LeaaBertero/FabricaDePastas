@page "/api/Promocion_Usuario/Crear"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;


<h1 class="text-center mb-4 text-success fw-bold">
    <i class="bi bi-stars me-2"></i>Promoción de los productos
</h1>

<EditForm Model="promocion_usuario" OnValidSubmit="Grabar" class="container">
    <DataAnnotationsValidator />

    <div class="card shadow-sm border-start border-4 border-success mb-5">
        <div class="card-body">
            <div class="row g-4">
                <!-- Fecha de inicio -->
                <div class="col-md-6">
                    <label for="fechaInicio" class="form-label fw-semibold">
                        <i class="bi bi-calendar-event me-1"></i>Fecha de inicio
                    </label>
                    <input type="date" id="fechaInicio" @bind="promocion_usuario.Fecha_Inicio_Promo" class="form-control" />
                    <ValidationMessage For="@(() => promocion_usuario.Fecha_Inicio_Promo)" />
                </div>

                <!-- Fecha fin -->
                <div class="col-md-6">
                    <label for="fechaFin" class="form-label fw-semibold">
                        <i class="bi bi-calendar-check me-1"></i>Fecha fin de promoción
                    </label>
                    <input type="date" id="fechaFin" @bind="promocion_usuario.Fecha_Fin_Promo" class="form-control" />
                    <ValidationMessage For="@(() => promocion_usuario.Fecha_Fin_Promo)" />
                </div>

                <!-- Descripción -->
                <div class="col-md-12">
                    <label for="Descripcion" class="form-label fw-semibold">
                        <i class="bi bi-chat-left-text me-1"></i>Descripción de la promoción
                    </label>
                    <input type="text" id="Descripcion" placeholder="Ej: 2x1 en productos seleccionados"
                           @bind="promocion_usuario.Descripcion" class="form-control" />
                    <ValidationMessage For="@(() => promocion_usuario.Descripcion)" />
                </div>

                <!-- Botones -->
                <div class="col-12 text-center mt-4">
                    <button class="btn btn-success me-2" type="submit">
                        <i class="bi bi-check-circle-fill me-1"></i>Cargar promoción
                    </button>
                    <button class="btn btn-outline-secondary" type="button" @onclick="Cancelar">
                        <i class="bi bi-x-circle me-1"></i>Cancelar
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>



@code {
    private Promocion_Usuario promocion_usuario = new Promocion_Usuario();

    private async Task Grabar()
    {
        var httpRespuesta = await http.Post<Promocion_Usuario>("api/Promocion_Usuario", promocion_usuario);

        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }

        navigationManager.NavigateTo("/api/Promocion_Usuario/Lista");

    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Promocion_Usuario/Lista");
    }
}
