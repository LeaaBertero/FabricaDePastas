@page "/api/Promocion_Usuario/ListaSB"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;



<h1 class="text-center mb-4 text-success fw-bold">
    <i class="bi bi-gift-fill me-2"></i>Promociones para usuarios
</h1>

@* <div class="container mb-4">
    <div class="d-flex justify-content-between align-items-center">
        <a class="btn btn-outline-primary shadow-sm" href="/api/Promocion_Usuario/Crear">
            <i class="bi bi-calendar-plus me-1"></i> Cargar fecha promo
        </a>
    </div>
</div> *@

<div class="container">
    @if (Mensaje == null)
    {
        @if (Lista_promoUsuarios == null)
        {
            <div class="alert alert-secondary text-center shadow-sm" role="alert">
                <i class="bi bi-arrow-repeat me-2"></i>Buscando promociones...
            </div>
        }
        else if (Lista_promoUsuarios.Count == 0)
        {
            <div class="alert alert-warning text-center shadow-sm" role="alert">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>No existen promociones para usuarios
            </div>
        }
        else
        {
            <div class="table-responsive shadow-sm">
                <table class="table table-bordered table-hover align-middle">
                    <thead class="table-success text-center">
                        <tr>
                            <th><i class="bi bi-calendar-event me-1"></i>Fecha inicio</th>
                            <th><i class="bi bi-calendar-check me-1"></i>Fecha fin</th>
                            <th><i class="bi bi-card-text me-1"></i>Descripción</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Lista_promoUsuarios)
                        {
                            <tr>
                                <td>@item.Fecha_Inicio_Promo.ToShortDateString()</td>
                                <td>@item.Fecha_Fin_Promo.ToShortDateString()</td>
                                <td>@(item.Descripcion ?? string.Empty)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    }
    else
    {
        <div class="alert alert-danger text-center shadow-sm" role="alert">
            <i class="bi bi-x-circle-fill me-2"></i>Error: @Mensaje
        </div>
    }
</div>



@code {


    List<Promocion_Usuario> Lista_promoUsuarios;
    Usuario usuario;

    string Mensaje;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await Leer();
    }

    #region Leer usuarios
    private async Task Leer()
    {
        var resp = await http.Get<List<Promocion_Usuario>>("api/Promocion_Usuario");

        string Mensaje = "";

        if (!resp.Error)
        {
            Lista_promoUsuarios = resp.Respuesta;
        }
        else
        {
            Mensaje = await resp.ObtenerError();
        }
    }
    #endregion

    // #region Eliminar usuario
    // private async Task Eliminar(Promocion_Usuario usuarioBorrar)
    // {
    //     usuarioBorrar = usuario;


    // }
    // #endregion

    private async Task Borrar()
    {
        var respuesta = await http.Delete($"api/Promocion_Usuario/{usuario.Id}");
        if (respuesta.Error)
        {
            var body = "No se pudo borrar";
        }

        await Leer();
    }
}






