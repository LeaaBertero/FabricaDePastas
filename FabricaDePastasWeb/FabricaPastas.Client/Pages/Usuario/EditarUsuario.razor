@page "/api/Usuario/Editar/{UsuarioId:int}"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;


@* 
<EditForm Model="Modificarusuario" OnValidSubmit="Grabar">

    <DataAnnotationsValidator />
           

    <div class="form-group">
        <label for="nombre">Nombre</label>
        <input type="text" @bind="Modificarusuario.Nombre" class="form-control" />
        <ValidationMessage For="@(() => Modificarusuario.Nombre)" />
    </div>

    <div class="form-group">
        <label for="apellido">Apellido</label>
        <input type="text" @bind="Modificarusuario.Apellido" class="form-control" />
        <ValidationMessage For="@(() => Modificarusuario.Apellido)" />
    </div>

    <div class="form-group">
        <label for="e-mail">E-mail</label>
        <input type="email" @bind="Modificarusuario.Email" class="form-control" />
        <ValidationMessage For="@(() => Modificarusuario.Email)" />
    </div>

    <div class="form-group">
        <label for="contraseña">Contraseña</label>
        <input type="password" @bind="Modificarusuario.Contraseña" class="form-control" />
        <ValidationMessage For="@(() => Modificarusuario.Contraseña)" />
    </div>

           


    <div>
        <button class="btn btn-success" type="submit">Actualizar</button>
        <button class="btn btn-secondary" onclick="Cancelar">Cancelar</button>
    </div>


</EditForm> *@

<h1 class="text-center mb-4 text-success fw-bold">🧑‍💻 Modificar usuario</h1>

<EditForm Model="Modificarusuario" OnValidSubmit="Grabar" class="container">
    <DataAnnotationsValidator />

    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="mb-3">
                <label for="nombre" class="form-label">Nombre</label>
                <input type="text" id="nombre" @bind="Modificarusuario.Nombre" class="form-control" placeholder="Ej: Leandro" />
                <ValidationMessage For="@(() => Modificarusuario.Nombre)" />
            </div>

            <div class="mb-3">
                <label for="apellido" class="form-label">Apellido</label>
                <input type="text" id="apellido" @bind="Modificarusuario.Apellido" class="form-control" placeholder="Ej: Rodríguez" />
                <ValidationMessage For="@(() => Modificarusuario.Apellido)" />
            </div>

            <div class="mb-3">
                <label for="email" class="form-label">E-mail</label>
                <input type="email" id="email" @bind="Modificarusuario.Email" class="form-control" placeholder="Ej: lean@example.com" />
                <ValidationMessage For="@(() => Modificarusuario.Email)" />
            </div>

            <div class="mb-3">
                <label for="contraseña" class="form-label">Contraseña</label>
                <input type="password" id="contraseña" @bind="Modificarusuario.Contraseña" class="form-control" placeholder="••••••••" />
                <ValidationMessage For="@(() => Modificarusuario.Contraseña)" />
            </div>

            <div class="text-center mt-4">
                <button class="btn btn-success me-2" type="submit">✅ Actualizar</button>
                <button class="btn btn-outline-secondary" type="button" @onclick="Cancelar">Cancelar</button>
            </div>
        </div>
    </div>
</EditForm>



@code {

    private Usuario Modificarusuario = new Usuario();

    [Parameter]
    public int UsuarioId { get; set; }



    string pepe = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.Get<Usuario>($"api/Usuario/{UsuarioId}");

        if (!respuesta.Error)
        {
            Modificarusuario = respuesta.Respuesta;
        }
        else
        {
            navigationManager.NavigateTo("/api/Usuario");
        }
    }



    private async Task Grabar()
    {
        //tDocumento.Personas = new List<Persona>();

        var httpRespuesta = await http.Put<Usuario>($"api/Usuario/{UsuarioId}", Modificarusuario);
        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/api/Usuario/Lista");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Usuario/Lista");
    }

}

