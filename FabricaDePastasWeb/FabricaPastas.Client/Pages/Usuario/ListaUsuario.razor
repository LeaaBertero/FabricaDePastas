@page "/api/Usuario/Lista"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;



<div class="container my-5">
    <div class="text-center mb-4">
        <h1 class="display-6 fw-bold text-primary">
            👥 Lista de usuarios registrados
        </h1>
        <p class="text-muted">Consultá los usuarios activos y gestioná sus datos desde esta sección</p>
    </div>

    @if (Mensaje == null)
    {
        @if (ListaUsuarios == null)
        {
            <div class="alert alert-secondary text-center shadow-sm">
                🔄 Buscando usuarios...
            </div>
        }
        else if (ListaUsuarios.Count == 0)
        {
            <div class="alert alert-warning text-center shadow-sm">
                ⚠️ No existen usuarios registrados
            </div>
        }
        else
        {
            <div class="card shadow-sm border-start border-4 border-primary">
                <div class="card-body">
                    <h5 class="card-title fw-semibold text-primary mb-3">
                        📋 Usuarios activos
                    </h5>

                    <div class="table-responsive">
                        <table class="table table-bordered table-hover align-middle">
                            <thead class="table-light text-center">
                                <tr>
                                    <th>🧑 Nombre</th>
                                    <th>👤 Apellido</th>
                                    <th>📧 Email</th>
                                    <th>📞 Teléfono</th>
                                    <th>🛠️ Acción</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in ListaUsuarios)
                                {
                                    <tr>
                                        <td>@item.Nombre</td>
                                        <td>@item.Apellido</td>
                                        <td>@item.Email</td>
                                        <td>@item.Teléfono</td>
                                        <td class="text-center">
                                            <button class="btn btn-danger btn-sm" @onclick="() => Eliminar(item)">
                                                🗑️ Borrar
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-danger text-center shadow-sm">
            ❌ Error: @Mensaje
        </div>
    }
</div>

<Confirmacion @ref="confirmacion"
              Titulo="⚠️ Alerta"
              textCancelar="Cancelar"
              textOk="Eliminar"
              onCancel="@Cancelar"
              onConfirm="@Eliminar">
    <h5 class="text-danger text-center">Está por eliminar un usuario. ¿Desea continuar?</h5>
</Confirmacion>

@code {
    Confirmacion confirmacion;

    private List<Usuario> ListaUsuarios;
    Usuario usuario;

    string Mensaje;

    Usuario? usuarioBorrar = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await Leer();
    }

    #region Leer usuarios
    private async Task Leer()
    {
        var resp = await http.Get<List<Usuario>>("api/Usuario");

        string Mensaje = "";

        if (!resp.Error)
        {
            ListaUsuarios = resp.Respuesta;
        }
        else
        {
            Mensaje = await resp.ObtenerError();
        }
    }
    #endregion


    private async Task Eliminar(Usuario usuario)
    {
        usuarioBorrar = usuario;
        confirmacion.Ver();
    }

   
    private void Cancelar()
    {
        confirmacion.Ocultar();
        usuarioBorrar = null;
    }

   
    private async Task Eliminar()
    {
        if (usuarioBorrar == null)
        {
            confirmacion.Ocultar();
            return;
        }

        var respuesta = await http.Delete($"api/Usuario/{usuarioBorrar.Id}");

        if (respuesta.Error)
        {
            Mensaje = "No se pudo borrar el usuario";
        }
        else
        {
            await Leer();
        }

       
        usuarioBorrar = null;
        confirmacion.Ocultar();
    }


}






