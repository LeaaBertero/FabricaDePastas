@page "/api/Lista_Precio/Lista"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;




<h1 class="text-center mb-4 text-info fw-bold">📄 Listas de precios vigentes</h1>

<div class="container mb-3">
    <div class="d-flex justify-content-between align-items-center">
        <p class="mb-0 fw-semibold">Para cargar una nueva lista de precio, hacé click en el botón:</p>
        <a class="btn btn-primary" href="/api/Lista_Precio/Crear">➕ Agregar lista de precio</a>
    </div>
</div>

<div class="container">
    @if (Mensaje == null)
    {
        @if (Lista_Precio == null)
        {
            <div class="alert alert-secondary text-center">🔄 Buscando listas de precio...</div>
        }
        else if (Lista_Precio.Count == 0)
        {
            <div class="alert alert-warning text-center">⚠️ No existen listas de precio registradas</div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-bordered table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>📅 Fecha desde</th>
                            <th>📅 Fecha hasta</th>
                            <th>📁 Archivo</th>
                            <th class="text-center">🗑️ Acción</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Lista_Precio)
                        {
                            <tr>
                                <td>@item.Fecha_Desde</td>
                                <td>@item.Fecha_Hasta</td>
                                <td>@item.Archivo_Lista_Precio</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.Archivo_Lista_Precio))
                                    {
                                        <a href="https://www.google.com/" target="_blank" class="btn btn-outline-primary btn-sm">📥 Ver archivo</a>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Sin archivo</span>
                                    }
                                </td>

                                <td class="text-center">
                                    <a class="btn btn-warning btn-sm" href="/api/Lista_Precio/Editar/@item.Id">Modificar</a>
                                    <button class="btn btn-danger btn-sm" @onclick="() => Eliminar(item)">Eliminar</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    }
    else
    {
        <div class="alert alert-danger text-center">❌ Error: @Mensaje</div>
    }
</div>
   


@code {

    private List<Lista_Precio> Lista_Precio;

    Lista_Precio listaPrecio;

    string Mensaje;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await Leer();
    }

    #region Leer usuarios
    private async Task Leer()
    {
        var resp = await http.Get<List<Lista_Precio>>("api/Lista_Precio");

        string Mensaje = "";

        if (!resp.Error)
        {
            Lista_Precio = resp.Respuesta;
        }
        else
        {
            Mensaje = await resp.ObtenerError();
        }
    }
    #endregion


    //se unifico el borrar y el eliminar usuario en uno solo.
    #region Eliminar Lista_Precio
    private async Task Eliminar(Lista_Precio ListaPrecioBorrar)
    {
        var respuesta = await http.Delete($"api/Lista_Precio/{ListaPrecioBorrar.Id}");

        if (respuesta.Error)
        {
            Mensaje = "No se pudo borrar La lista de precio";
        }
        else
        {
            await Leer();
        }
    }
    #endregion
}
