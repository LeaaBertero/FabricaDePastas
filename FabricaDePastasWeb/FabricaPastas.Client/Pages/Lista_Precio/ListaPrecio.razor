@page "/api/Lista_Precio/Lista"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;

<!DOCTYPE html>
<html>

<head>
    <title>Modificar / Actualizar lista de precio</title>
</head>

<body>

    <header>
        <h1 class="text-center">Lista de precios</h1>
    </header>

    <main>

        @*  <div>
                <p>Para registrarte, hace click en el botón</p>
                <a class="btn btn-primary" href="/api/Usuario/Registro/Crear">Nuevo usuario</a>
            </div> *@
      @*   <div>
            <p>Para registrarte, hace click en el botón</p>
            <a class="btn btn-primary" href="/api/Usuario/Registro/Crear">Registrate</a>
        </div> *@

      @*   <div class="bg-danger">
            <a href="/api/Usuario/Registro/Crear">Nuevo usuario</a>
        </div> *@

        <table>

            <tr>
                <th>Fecha desde</th>
                <th>Fecha hasta</th>
                <th>Archivo lista de precio</th>
                
            </tr>

            @if (Mensaje == null)
            {
                if (Lista_Precio == null)
                {
                    <p>Buscando....</p>
                }
                else if (Lista_Precio.Count == 0)
                {
                    <p>No existen listas de precio</p>
                }
                else
                {
                    @foreach (var item in Lista_Precio)
                    {
                        <tr>
                            <td>@item.Fecha_Desde</td>
                            <td>@item.Fecha_Hasta</td>
                            <td>@item.Archivo_Lista_Precio</td>

                            <td>
                                <button class="btn btn-danger"
                                        @onclick="() => Eliminar(item)">
                                    Borrar
                                </button>
                            </td>
                        </tr>
                    }
                }
            }
            else
            {
                <p> Error: @Mensaje</p>
            }



        </table>

    </main>


    <footer>
        <p>&copy; 2025 La Nonna Personal</p>
    </footer>

</body>

</html>






@code {

    private List<Lista_Precio> Lista_Precio;

    Lista_Precio listaPrecio;

    string Mensaje;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await Leer();
    }

    #region Leer usuarios
    private async Task Leer()
    {
        var resp = await http.Get<List<Lista_Precio>>("api/Lista_Precio");

        string Mensaje = "";

        if (!resp.Error)
        {
            Lista_Precio = resp.Respuesta;
        }
        else
        {
            Mensaje = await resp.ObtenerError();
        }
    }
    #endregion






    //se unifico el borrar y el eliminar usuario en uno solo.
    #region Eliminar Lista_Precio
    private async Task Eliminar(Lista_Precio ListaPrecioBorrar)
    {
        var respuesta = await http.Delete($"api/Lista_Precio/{ListaPrecioBorrar.Id}");

        if (respuesta.Error)
        {
            Mensaje = "No se pudo borrar La lista de precio";
        }
        else
        {
            await Leer();
        }
    }
    #endregion
}
