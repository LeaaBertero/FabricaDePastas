@page "/api/Promocion/Editar/{PromocionId:int}"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;

<!DOCTYPE html>
<html>

    <head>
        <title>Modificar promoción</title>
    </head>

    <body>

        <header>
            <h1>Modificar promoción</h1>
        </header>

        <main>

            <EditForm Model="promocion" OnValidSubmit="Grabar">

                <DataAnnotationsValidator />
           
                <div class="form-group">
                    <label for="nombre">Titulo</label>
                    <input type="text" @bind="promocion.Titulo" class="form-control" />
                    <ValidationMessage For="@(() => promocion.Titulo)" />
                </div>

                <div class="form-group">
                    <label for="nombre">Descripción</label>
                    <input type="text" @bind="promocion.Descripcion" class="form-control" />
                    <ValidationMessage For="@(() => promocion.Descripcion)" />
                </div>
                
                <div class="form-group">
                    <label for="nombre">Fecha inicio</label>
                    <input type="date" @bind="promocion.Fecha_Inicio" class="form-control" />
                    <ValidationMessage For="@(() => promocion.Fecha_Inicio)" />
                </div>

                <div class="form-group">
                    <label for="nombre">Fecha fin</label>
                    <input type="date" @bind="promocion.Fecha_Fin" class="form-control" />
                    <ValidationMessage For="@(() => promocion.Fecha_Fin)" />
                </div>

                <div class="form-group">
                    <label for="activo">¿Está activo?</label>
                    <input type="checkbox" id="activo" @bind="promocion.Activa" class="form-check-input" />
                    <ValidationMessage For="@(() => promocion.Activa)" />
                </div>
          


                <div>
                    <button class="btn btn-success" type="submit">Modificar</button>
                    <button class="btn btn-secondary" onclick="Cancelar">Cancelar</button>
                </div>


            </EditForm>

        </main>

        <footer>

        </footer>

    </body>

</html>


@code {

    private Promocion promocion = new Promocion();

    [Parameter]
    public int PromocionId { get; set; }

    string pepe = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.Get<Promocion>($"api/Promocion/{PromocionId}");

        if (!respuesta.Error)
        {
            promocion = respuesta.Respuesta;
        }
        else
        {
            navigationManager.NavigateTo("/api/Promocion");
        }
    }



    private async Task Grabar()
    {
        //tDocumento.Personas = new List<Persona>();

        var httpRespuesta = await http.Put<Promocion>($"api/Promocion/{PromocionId}", promocion);
        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/api/Promocion");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Promocion/Lista");
    }

}
