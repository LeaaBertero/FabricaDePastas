@page "/api/Promocion/Crear"
@inject IHTTPServicio http;
@inject NavigationManager navigationManager;


<h1 class="text-center mb-2">
    <i class="bi bi-megaphone-fill text-primary me-2"></i> Promoción de productos
</h1>
<p class="text-center text-muted mb-4">Cargá una nueva promo para destacar en la tienda</p>

<EditForm Model="promocion" OnValidSubmit="Grabar" class="container">
    <DataAnnotationsValidator />

    <div class="row g-4">

        <!-- Título -->
        <div class="col-md-6">
            <label for="Titulo" class="form-label">Título de la promoción</label>
            <div class="input-group">
                <span class="input-group-text"><i class="bi bi-tag-fill"></i></span>
                <input type="text" id="Titulo" @bind="promocion.Titulo" class="form-control" placeholder="Ej: ¡2x1 para celebrar el finde!" />
            </div>
            <ValidationMessage For="@(() => promocion.Titulo)" />
        </div>

        <!-- Descripción -->
        <div class="col-md-6">
            <label for="Descripcion" class="form-label">Descripción</label>
            <div class="input-group">
                <span class="input-group-text"><i class="bi bi-chat-left-text-fill"></i></span>
                <input type="text" id="Descripcion" @bind="promocion.Descripcion" class="form-control" placeholder="Ej: Válido hasta agotar stock o fin de mes" />
            </div>
            <ValidationMessage For="@(() => promocion.Descripcion)" />
        </div>

        <!-- Fecha de inicio -->
        <div class="col-md-6">
            <label for="Fecha_Inicio" class="form-label">Fecha de inicio</label>
            <input type="date" id="Fecha_Inicio" @bind="promocion.Fecha_Inicio" class="form-control" />
            <small class="text-muted">Desde cuándo se muestra la promoción</small>
            <ValidationMessage For="@(() => promocion.Fecha_Inicio)" />
        </div>

        <!-- Fecha de fin -->
        <div class="col-md-6">
            <label for="Fecha_Fin" class="form-label">Fecha de finalización</label>
            <input type="date" id="Fecha_Fin" @bind="promocion.Fecha_Fin" class="form-control" />
            <small class="text-muted">Hasta cuándo estará activa</small>
            <ValidationMessage For="@(() => promocion.Fecha_Fin)" />
        </div>

        <!-- Estado activa -->
        <div class="col-12">
            <div class="form-check form-switch">
                <input type="checkbox" id="Activa" @bind="promocion.Activa" class="form-check-input" />
                <label for="Activa" class="form-check-label">Activar promoción al guardar</label>
            </div>
            <ValidationMessage For="@(() => promocion.Activa)" />
        </div>

        <!-- Botones -->
        <div class="col-12 text-center mt-4">
            <button class="btn btn-success me-2" type="submit">
                <i class="bi bi-check-circle-fill me-1"></i> Crear promoción
            </button>
            <button class="btn btn-outline-danger me-2" type="button" @onclick="Cancelar">
                <i class="bi bi-x-circle"></i> Cancelar
            </button>
            <a class="btn btn-outline-primary" href="api/Promocion/Lista">
                <i class="bi bi-list-ul"></i> Ver todas
            </a>
        </div>

    </div>
</EditForm>


@code {
    private Promocion promocion = new Promocion();

    private async Task Grabar()
    {
        var httpRespuesta = await http.Post<Promocion>("api/Promocion", promocion);

        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("api/Promocion/Lista");

    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/api/Rol");
        // navigationManager.NavigateTo("api/Promocion/Lista"); 
    }
}
